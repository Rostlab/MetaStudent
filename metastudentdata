#!/usr/bin/python
# -*- coding: utf-8 -*-

# metastudent - Predict GO terms from sequence
#
# Written by Tobias Hamp <hampt@rostlab.org>
#
# Copyright (c) 2012-2013 Tobias Hamp <hampt@rostlab.org>

import traceback
import os
from getopt import getopt, GetoptError
import sys
import commands
import shutil
from subprocess import call

def usage():
	return "metastudentdata [--datadir=] [--data-version=] [--help] [--silent] [--version] [--keep-data-tar] [--remote-ftp-dir=] [--remote-filesys-dir=]"


if __name__ == "__main__":

	silent = False
	currentPath = os.getcwd()
	pkg_data_ver = None
	argDataVer="201012"
	argDataDir="/usr/share/metastudent-data"
	remoteFtpDir = "ftp://rostlab.org/metastudent"
	remoteFilesysDir = None
	
	try:
		opts, args = getopt(sys.argv[1:], "", ["datadir=", "data-version=", "help", "silent", "version", "keep-data-tar", "remote-ftp-dir=", "remote-filesys-dir="])
	except GetoptError, err:
		print >> sys.stderr, usage() + "\n"
		print >> sys.stderr, str(err) + "\n"
		print >> sys.stderr, "Invalid arguments, please check man page.\n"
		sys.exit(1)

	optArgs = [arg[0] for arg in opts]
	argDict = dict([arg for arg in opts])
	
	if "--version" in optArgs:
		print "1.0"
		sys.exit(0)
	if "--help" in optArgs:
		print usage()
		sys.exit(0)
	if "--silent" in optArgs:
		silent = True
	if "--datadir" in optArgs:
		argDataDir=argDict["--datadir"]
	if "--data-version" in optArgs:
		argDataVer=argDict["--data-version"]
	if "--remote-ftp-dir" in optArgs:
		remoteFtpDir=argDict["--remote-ftp-dir"]
	if "--remote-filesys-dir" in optArgs:
		remoteFilesysDir=argDict["--remote-filesys-dir"]
	
	
	
	# Does version in $opt->{datadir}/dataversion.txt match package version?
	dataversionFilePath = os.path.join(argDataDir, "dataversion.txt")
	if os.path.exists(dataversionFilePath):
		dataversionFile = open(dataversionFilePath)
		pkg_data_ver = dataversionFile.read().rstrip("\n")
		dataversionFile.close()
		
	if not silent: print "data version: %s" % pkg_data_ver

	if pkg_data_ver == None or pkg_data_ver != argDataVer:
		
		if not silent: print "dataversion.txt not found or version not up to date; updating data..."
		targetTarFile = "metastudent-data_%s.tar.gz" % argDataVer
		targetTmpTarFile = os.path.join("/tmp/", targetTarFile)
		
		if remoteFilesysDir == None:
			data_url = "%s/%s" % (remoteFtpDir,targetTarFile)
			sudo = ""
			
			#wget it from $data_url
			myCmd = None
			if silent:
				myCmd = "/usr/bin/wget --quiet"
			else:
				myCmd = "/usr/bin/wget"
			myCmd += " --continue -O %s %s" % (targetTmpTarFile, data_url)
			
			if not silent: print myCmd
			s, o = commands.getstatusoutput(myCmd)
			if s != 0:
				print >> sys.stderr, "Error downloading:"
				print >> sys.stderr, o
				sys.exit(1)
		else:
			data_url = os.path.join(remoteFilesysDir, targetTarFile)
			try:
				if not silent: print "Copying from %s to %s" % (data_url, targetTmpTarFile)
				shutil.copy(data_url, targetTmpTarFile)
			except:
				print >> sys.stderr, "Error copying %s to %s:\n" % (data_url, targetTmpTarFile)
				traceback.print_exc(file=sys.stderr)
				sys.exit(1)
			
		try:
			myCmd = "/bin/mkdir -p %s" % argDataDir
			if not silent: print myCmd
			s, o = commands.getstatusoutput(myCmd)
			if s != 0:
				if not silent: print "failed;"
				if os.geteuid() == 0:
					if not silent: print "total fail, because I am already root"
					print >> sys.stderr, "Error creating %s:" % argDataDir
					print >> sys.stderr, o
					sys.exit(1)
				else:
					sudo = "/usr/bin/sudo"
					myCmd = sudo + " " + myCmd
					if not silent: print "trying again with sudo; %s" % myCmd
					s, o = commands.getstatusoutput(myCmd)
					if s != 0:
						print >> sys.stderr, "Error creating %s:" % argDataDir
						print >> sys.stderr, o
						sys.exit(1)
			   
			if os.geteuid() != 0 and not os.access(argDataDir, os.W_OK):
				if not silent: print "I am not root and I can not write to %s; from now on, I will use sudo" % argDataDir
				sudo = "/usr/bin/sudo"

			# untar
			if silent:
				myCmd = "%s /bin/tar" % sudo
			else:
				myCmd = "%s /bin/tar --verbose" % sudo
			myCmd += " -xzf %s --no-same-owner --no-same-permissions --strip-components=1 -C %s --wildcards metastudent-data-*/* --exclude setup* --exclude metastudent-data-*/COPYING " % (targetTmpTarFile, argDataDir)
			if not silent: print myCmd
			try:
				retcode = call(myCmd, shell=True)
				if retcode < 0:
					print >>sys.stderr, "%s returned signal", -retcode
			except OSError as e:
				print >>sys.stderr, "Execution failed:", e
			
			
			s, o = commands.getstatusoutput(myCmd)
			if s != 0:
				print >> sys.stderr, "Error running %s:" % myCmd
				print >> sys.stderr, o
				sys.exit(1)
			# -xzf " % (sudo) "sudo, "/bin/tar", "-xzf", "/tmp/$data_tar", '--no-same-owner', '--no-same-permissions', "--strip-components=1", '-C', $opt->{datadir}, "--wildcards", 'loctree2-data-*/*.txt', '--exclude', 'Makefile*', 'loctree2-data-*/COPYING', 'loctree2-data-*/fast_model_*' ); if($dbg){warn("@cmd");} system(@cmd) && confess("Failed to execute @cmd: ".($?>>8)); }
		
			if not "--keep-data-tar" in optArgs:
				myCmd = "%s /bin/rm -f %s" % (sudo, targetTmpTarFile)
				if not silent: print myCmd
				s, o = commands.getstatusoutput(myCmd)
				if s != 0:
					print >> sys.stderr, "Error deleting %s:" % targetTmpTarFile
					print >> sys.stderr, o
					sys.exit(1)
		
		except:
			traceback.print_exc(file=sys.stderr)
			print >> sys.stderr, "metastudent package data is missing from %s and automatic retrieval failed. Please download it from $data_url and untar it to %s.\n" % (argDataDir, data_url, argDataDir);
			print >> sys.stderr, "Since the download is restartable, you also can re-run this command to reattempt data download. The incomplete data file is in %s.\n" % targetTmpTarFile;
			sys.exit(1)


"""
=pod

=head1 NAME

metastudentdata - tool to download data files needed by metastudent

=head1 SYNOPSIS

<pkgdatadir>/metastudentdata [OPTIONS]

<pkgdatadir>/metastudentdata --man

=head1 DESCRIPTION

metastudentdata is a tool to download data files needed by metastudent(1).

=head1 OPTIONS

=over

=item --datadir

=item --data-version

=item --help

=item --keep-data-tar

=item --man

=item --quiet

=item --version

=item --remote-ftp-dir

=item --remote-filesys-dir

=back

=head1 AUTHOR

Tobias Hamp <hampt@rostlab.org>

=cut

"""

